class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class SLL:
    def __init__(self):
        self.head=None
    def insertbeg(self,data):
        nb=Node(data)
        nb.next=self.head
        self.head=nb
    def insertend(self,data):
        ne=Node(data)
        temp=self.head
        while temp.next:
            temp=temp.next
        temp.next=ne
    def insertspecific(self,pos,data):
        np=Node(data)
        temp=self.head
        for i in range(pos-1):
            temp=temp.next
        np.data=data
        np.next=temp.next
        temp.next=np
    def display(self):
        if Node is None:
            print("Linked list is empty")
        else:
            temp=self.head
            while temp:
                print(temp.data,end="->")
                temp=temp.next    
l=SLL()
n=Node(5)
l.head=n
n1=Node(10)
n.next=n1
n2=Node(20)
n1.next=n2
n3=Node(30)
n2.next=n3
n3.next=None
l.insertbeg("8")
l.insertbeg("6")
l.insertend("40")
l.insertspecific(3,"75")
l.display()
#output:6->8->5->75->10->20->30->40->
